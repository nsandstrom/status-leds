version: '3.1'
services:
    mongodb:
        image: mongo:latest
        container_name: "mongodb-lab"
        environment:
          - MONGO_DATA_DIR=/data/db
          - MONGO_LOG_DIR=/dev/null
        volumes:
          - ./data/db:/data/db
        ports:
            - 27017:27017
        expose:
            - 27017
        command: mongod --smallfiles --logpath=/dev/null # --quiet
    provider_manager:
        build:  ./provider_manager
        links:
            - mongodb:mongodb
        volumes:
            - ./provider_manager/app/src:/app/src
        ports:
            - 3000:80
        expose:
            - 80
        environment:
            PROVIDER_MANAGER_QUEUE: ${PROVIDER_MANAGER_QUEUE}
            DB_MANAGER_QUEUE: ${DB_MANAGER_QUEUE}
            AMQP_BROKER_HOSTNAME: ${AMQP_BROKER_HOSTNAME}
            AMQP_BROKER_USER_FILE: /run/secrets/rabbitmq_user
            AMQP_BROKER_PASSWORD_FILE: /run/secrets/rabbitmq_password
        secrets:
            - rabbitmq_user
            - rabbitmq_password
    api:
        build:  ./api
        links:
            - mongodb:mongodb
        volumes:
            - ./api/app/src:/app/src
        ports:
            - 3001:80
        expose:
            - 80
        environment:
            DB_MANAGER_URL: ${DB_MANAGER_URL}
            PROVIDER_MANAGER_URL: ${PROVIDER_MANAGER_URL}
            PROVIDER_MANAGER_QUEUE: ${PROVIDER_MANAGER_QUEUE}
            DB_MANAGER_QUEUE: ${DB_MANAGER_QUEUE}
            AMQP_BROKER_HOSTNAME: ${AMQP_BROKER_HOSTNAME}
            AMQP_BROKER_USER_FILE: /run/secrets/rabbitmq_user
            AMQP_BROKER_PASSWORD_FILE: /run/secrets/rabbitmq_password
        secrets:
            - rabbitmq_user
            - rabbitmq_password
    db_manager:
        build:  ./db_manager
        links:
            - mongodb:mongodb
        volumes:
            - ./db_manager/app/src:/app/src
        ports:
            - 3002:80
        expose:
            - 80
        environment:
            MONGODB_CONNECTION_STRING: ${MONGODB_CONNECTION_STRING}
            DB_MANAGER_QUEUE: ${DB_MANAGER_QUEUE}
            AMQP_BROKER_HOSTNAME: ${AMQP_BROKER_HOSTNAME}
            AMQP_BROKER_USER_FILE: /run/secrets/rabbitmq_user
            AMQP_BROKER_PASSWORD_FILE: /run/secrets/rabbitmq_password
        secrets:
            - rabbitmq_user
            - rabbitmq_password
    scheduler:
        build:  ./scheduler
        volumes:
            - ./scheduler/app/src:/app/src
        environment:
            PROVIDER_MANAGER_QUEUE: ${PROVIDER_MANAGER_QUEUE}
            DB_MANAGER_QUEUE: ${DB_MANAGER_QUEUE}
            AMQP_BROKER_HOSTNAME: ${AMQP_BROKER_HOSTNAME}
            AMQP_BROKER_USER_FILE: /run/secrets/rabbitmq_user
            AMQP_BROKER_PASSWORD_FILE: /run/secrets/rabbitmq_password
        secrets:
            - rabbitmq_user
            - rabbitmq_password
    webapp:
        build:   ./webapp
        ports:
            - 80:8080
    rabbitmq:
        image: "rabbitmq:3-management"
        environment:
            RABBITMQ_DEFAULT_USER_FILE: /run/secrets/rabbitmq_user
            RABBITMQ_DEFAULT_PASS_FILE: /run/secrets/rabbitmq_password
        ports:
            - 15672:15672
            - 5672:5672
        expose:
            - 5672
        logging:
            driver: "none"
        secrets:
            - rabbitmq_user
            - rabbitmq_password
secrets:
    rabbitmq_password:
        file: secrets/rabbitmq_password.txt
    rabbitmq_user:
        file: secrets/rabbitmq_user.txt